"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 3.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os

# Environment variables

APP_ENV               = os.getenv('APP_ENV', 'local-dev')
MYSQL_HOST            = os.getenv('MYSQL_HOST', 'db')
MYSQL_USER            = os.getenv('MYSQL_USER', 'sample')
MYSQL_PASSWORD        = os.getenv('MYSQL_PASSWORD', 'sample')
MYSQL_DATABASE        = os.getenv('MYSQL_DATABASE', 'sample')
STATIC_URL            = os.getenv('STATIC_URL', '/static/')

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '2owq4q1=h_kbb^+mbb5)3xz(svw)ulm_d_u#e4rm&^-dsjr-+x'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG         = (APP_ENV != 'production')
ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]
if APP_ENV != 'production':
    INSTALLED_APPS.append('django_extensions')

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'core.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'core.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE':   'django.db.backends.mysql',
        'NAME':     MYSQL_DATABASE,
        'USER':     MYSQL_USER,
        'PASSWORD': MYSQL_PASSWORD,
        'HOST':     MYSQL_HOST,
        'PORT':     '3306',
        'OPTIONS':  {
            'charset':      'utf8mb4',
            'init_command': "SET sql_mode='STRICT_TRANS_TABLES'",
        },
    },
}


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'ja'
TIME_ZONE     = 'Asia/Tokyo'
USE_I18N      = True
USE_L10N      = True
USE_TZ        = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_ROOT = '{}/static/'.format(BASE_DIR)
STATICFILES_FINDERS = [
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
]

# LOGGING
LOGGING = {
    'version': 1,
    'formatters': {},
    'handlers': {
        'console': {
            'level': 'DEBUG' if DEBUG else 'INFO',
            'class': 'logging.StreamHandler',
        }
    },
    'loggers': {
        'app': {
            'level':     'DEBUG' if DEBUG else 'INFO',
            'propagate': True,
            'handlers':  ['console'],
        },
    }
}

if APP_ENV == 'local':
    LOGGING['formatters']['verbose'] = {
        'format': "[%(asctime)s] %(levelname)s [%(name)s:%(lineno)s] %(message)s",
        'datefmt': "%d/%b/%Y %H:%M:%S"
    }
    LOGGING['handlers']['file'] = {
        'level':       'DEBUG' if DEBUG else 'INFO',
        'class':       'logging.handlers.TimedRotatingFileHandler',
        'filename':    '/var/log/app/django.log',
        'formatter':   'verbose',
        'when':        'D',
        'interval':    1,
        'backupCount': 7,
    }
    LOGGING['loggers']['app']['handlers'] = ['console', 'file']

if APP_ENV != 'production':
    LOGGING['loggers']['django.db.backends'] = {
        'level':     'DEBUG',
        'propagate': True,
        'handlers':  ['console'],
    }
